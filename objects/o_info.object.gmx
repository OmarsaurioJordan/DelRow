<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>secreto = false; // true si no se vera la simulacion (para subir http)

// variables de simulacion
continental = false; // true si se enfrentan continentes
oficial = false; // true si es informacion confirmada del servidor
inocuo = false; // evitar reproduccion de clase basica
s_datosinfo();

// $D modo automatico para cargar datos
if automatico {
    inocuo = true;
    secreto = true;
    for (var i = 0; i &lt; 2; i++) { // A y B
        est_valu[i, 0] = 0; // cazados
        est_valu[i, 1] = 0; // poder
        est_valu[i, 2] = 0; // extra etc
    }
    est_auto = "";
    var c = m_comport_vecino;
    for (var i = 0; i &lt; m_map_total; i++) {
        info_gen[i, m_info_poblacion] = 0;
        info_gen[i, m_info_activos] = 0;
        info_gen[i, m_info_feminas] = 0.5;
        for (var k = 0; k &lt; m_rol_total * m_comport_total; k++) {
            info_rolcom[i, k] = 0;
        }
    }
    var n, g;
    if !file_exists("automatico.ini") {
        game_end();
        exit;
    }
    ini_open("automatico.ini");
    n = real(ini_read_string("A", "r1", "0"));
    g = real(ini_read_string("A", "c1", "0"));
    est_auto += "A1:" + string(n) + ":" + string(g) + " ";
    s_ponerinfo(m_prueba_a, n, c, g);
    g = real(ini_read_string("A", "c2", "0"));
    est_auto += "A2:0:" + string(g) + " ";
    s_ponerinfo(m_prueba_a, 0, c, g);
    n = real(ini_read_string("B", "r1", "0"));
    g = real(ini_read_string("B", "c1", "0"));
    est_auto += "B1:" + string(n) + ":" + string(g) + " ";
    s_ponerinfo(m_prueba_b, n, c, g);
    g = real(ini_read_string("B", "c2", "0"));
    est_auto += "B2:0:" + string(g) + " ";
    s_ponerinfo(m_prueba_b, 0, c, g);
    ini_close();
    file_delete("automatico.ini");
    alarm[0] = 1;
}
else {
    alarm[1] = 1;
}

// $D limpiar todos los datos y poner personalizados
if false {
    var c = m_comport_vecino;
    for (var i = 0; i &lt; m_map_total; i++) {
        info_gen[i, m_info_poblacion] = 0;
        info_gen[i, m_info_activos] = 0;
        info_gen[i, m_info_feminas] = 0.5;
        for (var k = 0; k &lt; m_rol_total * m_comport_total; k++) {
            info_rolcom[i, k] = 0;
        }
    }
    var jm = "(";
    for (var i = 0; i &lt; m_rol_total; i++) {
        jm += string(i) + "." + s_spanish(1100 + i) + " ";
    }
    jm = string_copy(jm, 1, string_length(jm) - 1) + ")";
    jm = "Rol, num 0-" + string(m_rol_total - 1) + ", " + jm;
    var n = get_integer("A." + jm, 0);
    s_ponerinfo(m_map_india, n, c, 255);
    n = get_integer("B." + jm, m_rol_milicia);
    s_ponerinfo(m_map_egipto, n, c, 255);
}

// $D limpiar todos los datos y setearlos a uno mismo
if false {
    var r = m_rol_vivir;
    var c = m_comport_azar;
    var g = 1000;
    for (var i = 0; i &lt; m_map_total; i++) {
        info_gen[i, m_info_poblacion] = g;
        info_gen[i, m_info_activos] = g;
        info_gen[i, m_info_feminas] = 0.5;
        for (var k = 0; k &lt; m_rol_total * m_comport_total; k++) {
            info_rolcom[i, k] = 0;
        }
        info_rolcom[i, r * m_comport_total + c] = g;
    }
}

// $D poner roles especificos por codigo
if false {
    var i = m_map_india;
    for (var k = 0; k &lt; m_rol_total * m_comport_total; k++) {
        info_rolcom[i, k] = 0;
    }
    var tot = info_gen[i, m_info_poblacion]
    var r = m_rol_arquitectura;
    var c = m_comport_pleito;
    info_rolcom[i, r * m_comport_total + c] = floor(tot * 0.4);
    tot -= floor(tot * 0.4);
    r = m_rol_juego;
    c = m_comport_azar;
    info_rolcom[i, r * m_comport_total + c] = floor(tot * 0.6);
    tot -= floor(tot * 0.6);
    r = m_rol_transporte;
    c = m_comport_seguir;
    info_rolcom[i, r * m_comport_total + c] = tot;
}

// $D guardar informacion azarosa en txt
if false {
    var aux = "datazar.txt";
    if file_exists(aux) {
        file_delete(aux);
    }
    s_log(aux, "Data DelRow Azar");
    s_log(aux, date_time_string(date_current_datetime()));
    s_log(aux, "");
    var r, ttt;
    for (var i = 0; i &lt; m_map_total; i++) {
        s_log(aux, s_spanish(200 + i));
        s_log(aux, "Población: " + string(info_gen[i, m_info_poblacion]));
        s_log(aux, "Activos: " + string(info_gen[i, m_info_activos]));
        s_log(aux, "Féminas: " + string(info_gen[i, m_info_feminas]));
        s_log(aux, "...");
        r = 0;
        for (var k = 0; k &lt; m_rol_total * m_comport_total; k++) {
            ttt = "";
            repeat m_comport_total - 1 {
                ttt += " " + string(info_rolcom[i, k]);
                k++;
            }
            s_log(aux, s_spanish(136 + r) + ":" + ttt);
            r++;
        }
        s_log(aux, "");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// cargar datos de archivo temporal

if file_exists("tmp.ini") {
    ini_open("tmp.ini");
    var hak = "";
    secreto = real(ini_read_string("configuracion", "secreto", "0"));
    hak += string(secreto);
    continental = real(ini_read_string("configuracion", "continental", "0"));
    hak += string(continental);
    oficial = real(ini_read_string("configuracion", "oficial", "0"));
    hak += string(oficial);
    for (var i = 0; i &lt; m_map_total; i++) {
        info_gen[i, m_info_poblacion] = real(ini_read_string("general", "poblacion" + string(i), "0"));
        hak += string(info_gen[i, m_info_poblacion]);
        info_gen[i, m_info_activos] = real(ini_read_string("general", "activos" + string(i), "0"));
        hak += string(info_gen[i, m_info_activos]);
        info_gen[i, m_info_feminas] = real(ini_read_string("general", "feminas" + string(i), "0"));
        hak += string(info_gen[i, m_info_feminas]);
        for (var k = 0; k &lt; m_rol_total * m_comport_total; k++) {
            info_rolcom[i, k] = real(ini_read_string("rolcom", string(i) + "_" + string(k), "0"));
            hak += string(info_rolcom[i, k]);
        }
    }
    var t = date_current_datetime();
    hak += string(date_get_year(t));
    hak += string(date_get_month(t));
    hak += string(date_get_day(t));
    hak += string(date_get_hour(t));
    hak = s_md5(hak) == ini_read_string("configuracion", "antihack", "");
    ini_close();
    file_delete("tmp.ini");
    if secreto {
        with o_mundo {
            velsim = 32;
        }
        if !hak {
            game_end();
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// solo se activara en modo automatico de pruebas

with o_mundo {
    velsim = 32;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
