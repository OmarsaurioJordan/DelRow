<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_bloque</parentName>
  <maskName>d_base</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
zona = irandom(m_map_total - 1);
conti = -1;

// datos generales de simulacion
unit_total = 0; // total de unidades registradas
unit_activ = 0; // total de unidades usuarios activos
unit_evoke = 0; // total de unidades creadas
unit_vivas = 0; // total de unidades actualmente vivas
unit_femin = 0; // porcentaje de mujeres
resist_tot = 0; // vida del centro, igual a ciudadanos
resist_act = 0; // vida del centro, puntos actuales
for (var i = 0; i &lt; m_rol_total; i++) {
    for (var k = 0; k &lt; m_comport_total; k++) {
        unit_info[i, k] = 0; // informacion de total de unidades por rol y comport
    }
    rol_porcent[i] = 0; // distribucion porcentual de los roles
}

// para estadisticas
estad_cazados = 0; // cantidad de unidades eliminadas
estad_mifin = -1; // en que momento se destruyo, ciclos de reloj
estad_killer = -1; // quien le dio el golpe final
estad_asedio = 0; // cantidad de golpes dados a centros

// funcionamiento
reloj_poblacion = -1; // reloj crear unidades, -1 crea muchas al inicio
reloj_hit = 0; // para ser golpeado
hostigue = 0; // mayor a mas enemigos tenga cerca

// para navegacion
rumbo = ds_grid_create(gridx + 1, gridy + 1);
ds_grid_clear(rumbo, 0);

// algoritmo k-medias para clusters de grupos
kmeans_ini = true; // true es el ciclo 1: asociar , false el 2: mover
reloj_grupo = irandom(m_sim_relojkmedias); // cada cuanto hacer k-medias

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if secreto { exit; }

if resist_act != 0 {
    if conti == -1 {
        draw_sprite_ext(d_minicentro, 0, x, y, 1, 1, 0, tinte[zona], 1);
    }
    else {
        draw_sprite_ext(d_minicentro, 0, x, y, 1, 1, 0, tinte[conti], 1);
    }
    draw_sprite(d_minicentro, 1, x, y);
    draw_sprite(d_minicentro, 2 + zona, x, y);
    draw_set_valign(fa_middle);
    draw_set_halign(fa_center);
    draw_text_transformed_colour(x, y - 25,
        s_millares(s_units_disp(id)),
        0.55, 0.55, 0, c_black, c_black, c_black, c_black, 1);
}
else {
    if conti == -1 {
        draw_sprite_ext(d_finminicentro, 0, x, y, 1, 1, 0, tinte[zona], 1);
    }
    else {
        draw_sprite_ext(d_finminicentro, 0, x, y, 1, 1, 0, tinte[conti], 1);
    }
    draw_sprite(d_finminicentro, 1, x, y);
    draw_sprite(d_finminicentro, 2 + zona, x, y);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
