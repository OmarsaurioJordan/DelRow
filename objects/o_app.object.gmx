<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_ventana(false);
depth = -room_height;

s_set_ofihttp();

var primerallamada = !file_exists("configuracion.ini");

idioma = s_gui_ini_dato("idioma", os_get_language());
if !s_verifica_idioma(idioma) {
    idioma = "en";
}
s_set_font(idioma);

antispam = 0; //reloj para no enviar muy seguido http
anima[0] = 0; // reloj para animar el logo
reloj_anima[0] = 0;
notificacion = 0; // ind mensaje volatil en pantalla
reloj_notifi = 0; // ver notificaciones
reloj_objeto = 0; // para poner o quitar item
reloj_bandera = 0; // para cambiar banderas del centro en ayuda
bandera = irandom(m_map_total - 1);

nota_servidor = s_gui_ini_dato("nota_servidor", ""); // texto raro que manda el server
s_actuali_nota();

// datos de toda la app
menu = m_bot_perfil;
pide_info = noone; // solicitar datos http para simulacion oficial

// datos del perfil de usuario
s_open_perfil("");
s_menu(menu);
s_actu_txt();

// cargar perfil si loggeado
if file_exists("tmp.txt") {
    file_delete("tmp.txt");
}
else {
    if usuario_correo != "" and usuario_pasword != "" {
        http_get(m_servidor + m_clave_web + "|login|0|" + usuario_correo +
        "|" + usuario_pasword + "|");
    }
}

// datos para busquedas de perfiles
s_bus_perfil();
textolargo = 0;
recientes = 0;
zonabus = -1;

// datos para estadisticas cargados
s_open_estadisticas();
s_open_resultados();

// datos para ventana de informacion
libro = s_gui_ini_dato("libro", 0);
viejolibro = libro; // para guardar cambios
monis = s_monigotes(irandom_range(6, 9));

if primerallamada {
    s_actualizacion(true);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// cambios libro
if libro != viejolibro {
    s_gui_ini_save("libro", libro);
    monis = s_monigotes(irandom_range(6, 9));
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// cambios libro
viejolibro = libro;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dt = delta_time * 0.000001;

antispam = max(0, antispam - dt);

reloj_notifi = max(0, reloj_notifi - dt);

reloj_objeto -= dt;
if reloj_objeto &lt;= 0 {
    reloj_objeto = 12;
}

reloj_bandera -= dt;
if reloj_bandera &lt;= 0 {
    reloj_bandera = random_range(2, 4);
    bandera = irandom(m_map_total - 1);
}

s_anima(id, 0, 4, 1, 0, false);
s_ventaesc();

if keyboard_check_pressed(vk_anykey) {
    switch keyboard_key {
        case vk_left:
            if menu == m_bot_ayuda {
                libro--;
                if libro &lt; 0 {
                    libro = m_libro_total - 1;
                }
            }
            break;
        case vk_right:
            if menu == m_bot_ayuda {
                libro++;
                if libro &gt;= m_libro_total {
                    libro = 0;
                }
            }
            break;
        case vk_enter:
            if menu == m_bot_ayuda {
                libro = irandom(m_libro_total - 1);
            }
            break;
        case vk_space:
            if menu == m_bot_ayuda {
                libro = 6 + irandom(m_rol_total - 1);
            }
            break;
        case vk_escape:
            game_end();
            break;
        case vk_f1:
            // $D para cambiar idioma rapido, testeo
            if false {
                do {
                    idioma = s_cambia_idioma(idioma);
                }
                until s_verifica_idioma(idioma);
                s_set_font(idioma);
                s_gui_ini_save("idioma", idioma);
            }
            else {
                fff = get_save_filename("PNG|*.png", "DelRow_rols");
                if fff != "" {
                    file_copy("DelRow_rols.png", fff);
                }
            }
            break;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_recv_ofihttp(id, async_load);
if ds_map_find_value(async_load, "status") == 0 {
    var data = s_split(ds_map_find_value(async_load, "result"), "|", false);
    if is_array(data) {
        var len = array_length_1d(data);
        if data[0] == m_clave_web and len &gt;= 2 {
        switch data[1] {
            case "relogin":
                if len == 22 {
                    usuario_correo = data[2];
                    usuario_pasword =  data[3];
                    usuario_nombre =  data[4];
                    usuario_zona = real(data[5]);
                    usuario_emocion = real(data[6]);
                    usuario_genero = real(data[7]);
                    usuario_piel = real(data[8]);
                    usuario_pelo = real(data[9]);
                    usuario_tinte = real(data[10]);
                    usuario_barba = real(data[11]);
                    usuario_camisa = real(data[12]);
                    usuario_pantalon = real(data[13]);
                    usuario_rol = real(data[14]);
                    usuario_zodiaco = real(data[15]);
                    usuario_comport = real(data[16]);
                    usuario_texto = data[18];
                    usuario_registro = data[19];
                    usuario_modifica = data[20];
                    usuario_online = data[21];
                    s_sinbarba(true);
                    s_save_perfil("");
                    s_menu(m_bot_perfil);
                    s_actu_txt();
                }
                break;
            case "reedit":
                with o_boton {
                    if tipo &gt;= m_bot_emocion_i and tipo &lt;= m_bot_comport_d {
                        activo = false;
                    }
                }
                with o_texto {
                    activo = false;
                }
                if file_exists("configuracionX.ini") {
                    s_open_perfil("X");
                    file_delete("configuracionX.ini");
                }
                s_save_perfil("");
                break;
            case "refind":
                if len == 18 {
                    busqueda_nombre =  data[2];
                    busqueda_zona = real(data[3]);
                    busqueda_emocion = real(data[4]);
                    busqueda_genero = real(data[5]);
                    busqueda_piel = real(data[6]);
                    busqueda_pelo = real(data[7]);
                    busqueda_tinte = real(data[8]);
                    busqueda_barba = real(data[9]);
                    busqueda_camisa = real(data[10]);
                    busqueda_pantalon = real(data[11]);
                    busqueda_rol = real(data[12]);
                    busqueda_zodiaco = real(data[13]);
                    busqueda_texto = data[14];
                    busqueda_registro = data[15];
                    busqueda_modifica = data[16];
                    busqueda_online = data[17];
                    s_menu(m_bot_busqueda);
                    s_actu_txt();
                }
                break;
            case "reinfo":
                if len == 19 {
                    // limpiar informacion estadistica
                    info_general = s_limpiarray(info_general);
                    info_rolcomport = s_limpiarray(info_rolcomport);
                    info_rol = s_limpiarray(info_rol);
                    info_emocion = s_limpiarray(info_emocion);
                    info_zodiaco = s_limpiarray(info_zodiaco);
                    // agregar datos de zonas sencillas y complejas
                    var ddd, dd, d, tot;
                    for (var i = 0; i &lt; m_map_total; i++) {
                        ddd = s_split(data[i + 2], ";", false);
                        info_general = s_sumavar(info_general, i, m_info_poblacion, real(ddd[1]));
                        info_general = s_sumavar(info_general, i, m_info_activos, real(ddd[2]));
                        info_general = s_sumavar(info_general, i, m_info_feminas, real(ddd[3]));
                        info_general = s_sumavar(info_general, i, m_info_record, real(ddd[7]));
                        dd = s_split(ddd[4], ":", false);
                        for (var k = 0; k &lt; m_rol_total; k++) {
                            d = s_split(dd[k], ",", false);
                            tot = 0;
                            for (var g = 0; g &lt; m_comport_total; g++) {
                                tot += real(d[g]);
                            }
                            info_rol = s_sumavar(info_rol, i, k, tot);
                        }
                        dd = s_split(string_replace_all(ddd[4], ":", ","), ",", false);
                        for (var k = 0; k &lt; m_rol_total * m_comport_total; k++) {
                            info_rolcomport = s_sumavar(info_rolcomport, i, k, real(dd[k]));
                        }
                        dd = s_split(ddd[5], ",", false);
                        for (var k = 0; k &lt; 7; k++) {
                            info_emocion = s_sumavar(info_emocion, i, k, real(dd[k]));
                        }
                        dd = s_split(ddd[6], ",", false);
                        for (var k = 0; k &lt; 12; k++) {
                            info_zodiaco = s_sumavar(info_zodiaco, i, k, real(dd[k]));
                        }
                    }
                    s_save_estadisticas();
                    var c = round(date_second_span(m_univtime, date_current_datetime()));
                    ini_open("configuracion.ini");
                    ini_write_string("timeserver", "actu_zona", string(c + 900));
                    ini_close();
                    s_notificacion(412);
                    if pide_info == ds_map_find_value(async_load, "id") {
                        s_obtieneinfo();
                        secreto = true;
                        o_info.oficial = true;
                        s_extrae_tmp();
                        room_goto(w_mundo);
                    }
                }
                break;
            case "rewar":
                if len == 25 {
                    // agregar datos a la estructura
                    var ddd;
                    for (var i = 0; i &lt; m_map_total + m_conti_total; i++) {
                        ddd = s_split(data[i + 2], ";", false);
                        for (var r = 0; r &lt; m_res_total; r++) {
                            info_result[i, r] = real(ddd[r + 1]);
                        }
                    }
                    s_trofeos();
                    s_save_resultados();
                    var c = round(date_second_span(m_univtime, date_current_datetime()));
                    ini_open("configuracion.ini");
                    ini_write_string("timeserver", "actu_war", string(c + 600));
                    ini_close();
                    s_notificacion(412);
                }
                break;
            case "reregister":
                s_notificacion(409);
                reloj_notifi *= 2;
                break;
            case "msj":
                if len == 3 {
                    s_notificacion(400 + real(data[2]));
                }
                break;
            case "remodifi":
                if len == 3 {
                    var s = round(real(data[2]));
                    var c = round(date_second_span(m_univtime, date_current_datetime()));
                    ini_open("configuracion.ini");
                    ini_write_string("timeserver", "espera", string(c + s));
                    ini_close();
                    if s != 0 and s_eseditado() {
                        with o_boton {
                            if tipo &gt;= m_bot_emocion_i and tipo &lt;= m_bot_comport_d {
                                activo = false;
                            }
                        }
                        with o_texto {
                            activo = false;
                        }
                        s_open_perfil("");
                        s_notificacion(408);
                        notificacion += "#(" + s_minutes(s) + ")";
                    }
                }
                break;
            case "tomenota":
                nota_servidor = data[2];
                ini_open("configuracion.ini");
                ini_write_string("gui", "nota_servidor", nota_servidor);
                var c = round(date_day_span(m_univtime, date_current_datetime()));
                ini_write_string("timeserver", "actu_nota", string(c + 1));
                ini_close();
                break;
        } }
    }
}
pide_info = noone;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// notificacion
if reloj_notifi != 0 {
    draw_set_alpha(0.9);
    var c = c_orange;
    switch notificacion {
        case 409:
        case 412:
            c = c_lime; break;
        case 406: case 407:
        case 408: case 410:
        case 411: case 135:
            c = c_yellow; break;
    }
    draw_roundrect_colour_ext(100, 450, 600, 800, 100, 100, c, c, false);
    draw_set_alpha(1);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_text_ext_transformed_colour(350, 650, s_msj(notificacion), -1, 450,
        1, 1, 0, c_black, c_black, c_black, c_black, 1);
}

draw_sprite(d_mouse, 0, mouse_x, mouse_y);
// $D ver coordenadas del mouse
if false {
    draw_set_valign(fa_bottom);
    draw_set_halign(fa_center);
    draw_text_colour(mouse_x, mouse_y - 10, string(mouse_x) + "," + string(mouse_y),
        c_black, c_black, c_black, c_black, 1);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// GUI
draw_set_alpha(0.1);
draw_roundrect_colour_ext(0, -100, 700, 100, 50, 50, c_maroon, c_maroon, false);
draw_set_alpha(1);

switch menu {
    case m_bot_perfil:
        if usuario_pasword == "" {
            draw_set_alpha(0.1);
            draw_roundrect_colour_ext(25, 150, 675, 525, 50, 50, c_red, c_red, false);
            draw_roundrect_colour_ext(25, 600, 675, 875, 50, 50, c_red, c_red, false);
            draw_set_alpha(1);
            
            draw_sprite(d_subtitulo, 0, 350, 200);
            draw_sprite(d_subtitulo, 1, 350, 650);
            draw_sprite_ext(d_omwekiatl, 0, 200, 1125, 1, 1, 0, c_white,
                max(0, -anima[0]));
            draw_sprite_ext(d_subtitulo, 3, 200, 1125, 1, 1, 0, c_white,
                max(0, anima[0]));
            
            draw_set_valign(fa_middle);
            draw_set_halign(fa_center);
            draw_text_ext_colour(350, 975, s_msj(100), -1, 575,
                c_gray, c_gray, c_gray, c_gray, 1);
            draw_set_halign(fa_left);
            draw_text_colour(500, 1075, s_msj(101),
                c_black, c_black, c_black, c_black, 1);
            draw_text_colour(500, 1175, s_msj(102),
                c_black, c_black, c_black, c_black, 1);
        }
        else {
            draw_set_valign(fa_middle);
            draw_set_halign(fa_center);
            draw_text_colour(350, 225, s_msj(200 + usuario_zona),
                c_black, c_black, c_black, c_black, 1);
            
            draw_set_valign(fa_middle);
            draw_set_halign(fa_center);
            draw_text_colour(350, 1025, s_msj(300 + usuario_comport),
                c_black, c_black, c_black, c_black, 1);
            
            var a = 1;
            var c = c_white;
            if !s_eseditado() {
                a = 0;
                c = c_gray;
            }
            var ii = 0;
            for (var i = 0; i &lt; 10; i++) {
                if i == 1 {
                    draw_sprite_ext(d_simbolo, ii + usuario_genero, 575, 275 + i * 50,
                        0.5, 0.5, 0, c, a);
                    ii++;
                }
                else {
                    draw_sprite_ext(d_simbolo, ii, 575, 275 + i * 50,
                        0.5, 0.5, 0, c, a);
                }
                ii++;
            }
            
            var ttt;
            ttt[0] = s_msj(104) + " " + s_str_meses(usuario_registro);
            ttt[1] = s_msj(105) + " " + s_str_meses(usuario_modifica);
            ttt[2] = s_msj(106) + s_str_meses(usuario_online);
            draw_set_valign(fa_middle);
            draw_set_halign(fa_left);
            for (var i = 0; i &lt; 3; i++) {
                draw_sprite_ext(d_tiempo, i, 75, 1075 + i * 50, 0.5, 0.5, 0, c_white, 1);
                draw_text_colour(125, 1075 + i * 50, ttt[i],
                    c_gray, c_gray, c_gray, c_gray, 1);
            }
            
            // dibujar el arte
            draw_sprite(d_edificio, usuario_rol, 50, 250);
            var xx = 325;
            var yy = 425;
            draw_sprite_ext(d_cola, usuario_pelo, 50 + xx, 250 + yy - 187,
                1, 1, 0, s_pelo(usuario_tinte), 1);
            if reloj_objeto &gt; 6 {
                if usuario_rol == 21 {
                    draw_sprite(d_objeto_d, usuario_rol, 50 + xx, 250 + yy);
                }
            }
            draw_sprite_ext(d_monigote, usuario_genero * 3, 50 + xx, 250 + yy,
                1, 1, 0, s_piel(usuario_piel), 1);
            draw_sprite_ext(d_monigote, usuario_genero * 3 + 1, 50 + xx, 250 + yy,
                1, 1, 0, s_tela(usuario_camisa), 1);
            draw_sprite_ext(d_monigote, usuario_genero * 3 + 2, 50 + xx, 250 + yy,
                1, 1, 0, s_tela(usuario_pantalon), 1);
            draw_sprite_ext(d_barba, usuario_barba, 50 + xx, 250 + yy - 187,
                1, 1, 0, s_pelo(usuario_tinte), 1);
            draw_sprite_ext(d_cabeza, 0, 50 + xx, 250 + yy - 187,
                1, 1, 0, s_piel(usuario_piel), 1);
            draw_sprite(d_emocion, usuario_emocion, 50 + xx, 250 + yy - 187);
            draw_sprite_ext(d_pelo, usuario_pelo, 50 + xx, 250 + yy - 187,
                1, 1, 0, s_pelo(usuario_tinte), 1);
            if reloj_objeto &gt; 6 {
                if usuario_rol != 21 {
                    draw_sprite(d_objeto_d, usuario_rol, 50 + xx, 250 + yy);
                }
                draw_sprite(d_objeto_i, usuario_rol, 50 + xx, 250 + yy);
            }
            var xxx = 64;
            var yyy = 48;
            switch usuario_rol {
                case 0:
                    draw_sprite_ext(d_monigote, 8, 50 + xx + xxx, 250 + yy + yyy,
                        1, 1, 0, s_piel(usuario_piel), 1);
                    draw_sprite_ext(d_monigote, 9, 50 + xx + xxx, 250 + yy + yyy,
                        1, 1, 0, s_tela(usuario_camisa), 1);
                    draw_sprite_ext(d_monigote, 10, 50 + xx + xxx, 250 + yy + yyy,
                        1, 1, 0, c_white, 1);
                    break;
                case 11:
                    draw_sprite_ext(d_monigote, 13, 50 + xx + xxx, 250 + yy + yyy,
                        1, 1, 0, c_white, 0.5);
                    break;
                case 20:
                    draw_sprite_ext(d_monigote, 11, 50 + xx + xxx, 250 + yy + yyy,
                        1, 1, 0, c_white, 1);
                    break;
                case 24:
                    draw_sprite_ext(d_monigote, 12, 50 + xx + xxx, 250 + yy + yyy,
                        1, 1, 0, c_white, 1);
                    break;
            }
            draw_sprite(d_zodiaco, usuario_zodiaco, 50 + 46, 250 + 455);
            draw_set_valign(fa_middle);
            draw_set_halign(fa_left);
            draw_text_colour(50 + 46 + 50, 250 + 455, s_msj(119 + usuario_zodiaco),
                c_gray, c_gray, c_gray, c_gray, 1);
            draw_sprite(d_icoedificio, usuario_rol, 50 + 400, 250 + 40);
            draw_set_valign(fa_top);
            draw_set_halign(fa_right);
            draw_text_colour(50 + 425, 250 + 75, s_msj(136 + usuario_rol),
                c_gray, c_gray, c_gray, c_gray, 1);
        }
        break;
    case m_bot_busqueda:
        if busqueda_nombre == "" {
            draw_set_alpha(0.1);
            draw_roundrect_colour_ext(25, 150, 675, 425, 50, 50, c_red, c_red, false);
            draw_roundrect_colour_ext(25, 500, 675, 775, 50, 50, c_red, c_red, false);
            draw_set_alpha(1);
            
            draw_sprite(d_subtitulo, 2, 350, 200);
            draw_sprite(d_subtitulo, 4, 350, 550);
            
            draw_set_valign(fa_middle);
            draw_set_halign(fa_center);
            if zonabus == -1 {
                draw_text_colour(350, 625, s_msj(134),
                    c_black, c_black, c_black, c_black, 1);
            }
            else {
                draw_text_colour(350, 625, s_msj(200 + zonabus),
                    c_black, c_black, c_black, c_black, 1);
            }
            
            draw_set_halign(fa_left);
            draw_set_valign(fa_middle);
            draw_text_colour(100, 675, s_msj(131 + textolargo),
                c_black, c_black, c_black, c_black, 1);
            draw_text_colour(100, 725, s_msj(131 + recientes * 2),
                c_black, c_black, c_black, c_black, 1);
        }
        else {
            draw_set_valign(fa_middle);
            draw_set_halign(fa_center);
            draw_text_colour(350, 225, s_msj(200 + busqueda_zona),
                c_black, c_black, c_black, c_black, 1);
            
            var ttt;
            ttt[0] = s_msj(104) + " " + s_str_meses(busqueda_registro);
            ttt[1] = s_msj(105) + " " + s_str_meses(busqueda_modifica);
            ttt[2] = s_msj(106) + s_str_meses(busqueda_online);
            draw_set_valign(fa_middle);
            draw_set_halign(fa_left);
            for (var i = 0; i &lt; 3; i++) {
                draw_sprite_ext(d_tiempo, i, 75, 1075 + i * 50, 0.5, 0.5, 0, c_white, 1);
                draw_text_colour(125, 1075 + i * 50, ttt[i],
                    c_gray, c_gray, c_gray, c_gray, 1);
            }
            
            // dibujar el arte
            draw_sprite(d_edificio, busqueda_rol, 50, 250);
            var xx = 325;
            var yy = 425;
            draw_sprite_ext(d_cola, busqueda_pelo, 50 + xx, 250 + yy - 187,
                1, 1, 0, s_pelo(busqueda_tinte), 1);
            if reloj_objeto &gt; 6 {
                if busqueda_rol == 21 {
                    draw_sprite(d_objeto_d, busqueda_rol, 50 + xx, 250 + yy);
                }
            }
            draw_sprite_ext(d_monigote, busqueda_genero * 3, 50 + xx, 250 + yy,
                1, 1, 0, s_piel(busqueda_piel), 1);
            draw_sprite_ext(d_monigote, busqueda_genero * 3 + 1, 50 + xx, 250 + yy,
                1, 1, 0, s_tela(busqueda_camisa), 1);
            draw_sprite_ext(d_monigote, busqueda_genero * 3 + 2, 50 + xx, 250 + yy,
                1, 1, 0, s_tela(busqueda_pantalon), 1);
            draw_sprite_ext(d_barba, busqueda_barba, 50 + xx, 250 + yy - 187,
                1, 1, 0, s_pelo(busqueda_tinte), 1);
            draw_sprite_ext(d_cabeza, 0, 50 + xx, 250 + yy - 187,
                1, 1, 0, s_piel(busqueda_piel), 1);
            draw_sprite(d_emocion, busqueda_emocion, 50 + xx, 250 + yy - 187);
            draw_sprite_ext(d_pelo, busqueda_pelo, 50 + xx, 250 + yy - 187,
                1, 1, 0, s_pelo(busqueda_tinte), 1);
            if reloj_objeto &gt; 6 {
                if busqueda_rol != 21 {
                    draw_sprite(d_objeto_d, busqueda_rol, 50 + xx, 250 + yy);
                }
                draw_sprite(d_objeto_i, busqueda_rol, 50 + xx, 250 + yy);
            }
            var xxx = 64;
            var yyy = 48;
            switch busqueda_rol {
                case 0:
                    draw_sprite_ext(d_monigote, 8, 50 + xx + xxx, 250 + yy + yyy,
                        1, 1, 0, s_piel(busqueda_piel), 1);
                    draw_sprite_ext(d_monigote, 9, 50 + xx + xxx, 250 + yy + yyy,
                        1, 1, 0, s_tela(busqueda_camisa), 1);
                    draw_sprite_ext(d_monigote, 10, 50 + xx + xxx, 250 + yy + yyy,
                        1, 1, 0, c_white, 1);
                    break;
                case 11:
                    draw_sprite_ext(d_monigote, 13, 50 + xx + xxx, 250 + yy + yyy,
                        1, 1, 0, c_white, 0.5);
                    break;
                case 20:
                    draw_sprite_ext(d_monigote, 11, 50 + xx + xxx, 250 + yy + yyy,
                        1, 1, 0, c_white, 1);
                    break;
                case 24:
                    draw_sprite_ext(d_monigote, 12, 50 + xx + xxx, 250 + yy + yyy,
                        1, 1, 0, c_white, 1);
                    break;
            }
            draw_sprite(d_zodiaco, busqueda_zodiaco, 50 + 46, 250 + 455);
            draw_set_valign(fa_middle);
            draw_set_halign(fa_left);
            draw_text_colour(50 + 46 + 50, 250 + 455, s_msj(119 + busqueda_zodiaco),
                c_gray, c_gray, c_gray, c_gray, 1);
            draw_sprite(d_icoedificio, busqueda_rol, 50 + 400, 250 + 40);
            draw_set_valign(fa_top);
            draw_set_halign(fa_right);
            draw_text_colour(50 + 425, 250 + 75, s_msj(136 + busqueda_rol),
                c_gray, c_gray, c_gray, c_gray, 1);
        }
        break;
    case m_bot_zona:
        draw_set_valign(fa_middle);
        draw_set_halign(fa_center);
        draw_text_colour(350, 175, s_msj(200 + info_zona),
            c_black, c_black, c_black, c_black, 1);
        draw_text_colour(350, 625, s_msj(164 + info_dato),
            c_black, c_black, c_black, c_black, 1);
        
        var ew = 500 / sprite_get_width(d_minimapa);
        var eh = 250 / sprite_get_height(d_minimapa);
        draw_sprite_ext(d_minimapa, 0, 100, 200, ew, eh, 0, c_aqua, 1);
        for (var i = 0; i &lt; m_map_total; i++) {
            if i == info_zona or info_zona == m_map_total + m_mmap_total - 1 or
                    (info_zona == 17 and (i &gt;= 0 and i &lt;= 2)) or
                    (info_zona == 18 and (i &gt;= 3 and i &lt;= 5)) or
                    (info_zona == 19 and (i &gt;= 6 and i &lt;= 9)) or
                    (info_zona == 20 and (i &gt;= 10 and i &lt;= 12)) or
                    (info_zona == 21 and (i &gt;= 13 and i &lt;= 15)) {
                draw_sprite_ext(d_minimapa, i + 1, 100, 200, ew, eh, 0, c_red, 1);
            }
            else {
                draw_sprite_ext(d_minimapa, i + 1, 100, 200, ew, eh, 0, c_lime, 1);
            }
        }
        
        var aux, tot;
        draw_set_valign(fa_middle);
        draw_set_halign(fa_left);
        tot = info_general[info_zona, m_info_poblacion];
        draw_sprite_ext(d_simbolo, 9, 125, 475, 0.5, 0.5, 0, c_white, 1);
        draw_text_transformed_colour(150, 475, string(tot), 1, 1, 0,
            c_black, c_black, c_black, c_black, 1);
        
        aux = info_general[info_zona, m_info_activos];
        aux = string(aux) + " (" + s_porcent(aux, tot) + " %)";
        draw_sprite_ext(d_tiempo, 2, 375, 475, 0.5, 0.5, 0, c_white, 1);
        draw_text_transformed_colour(400, 475, aux, 0.8, 0.8, 0,
            c_black, c_black, c_black, c_black, 1);
        
        aux = info_general[info_zona, m_info_feminas];
        aux = s_msj(168) + ": " + s_porcent(aux, tot) + " %";
        draw_sprite_ext(d_simbolo, 11, 125, 525, 0.5, 0.5, 0, c_white, 1);
        draw_text_transformed_colour(150, 525, aux, 0.8, 0.8, 0,
            c_black, c_black, c_black, c_black, 1);
        
        aux = info_general[info_zona, m_info_record];
        aux = string(aux) + " (" + s_porcent(aux, tot) + " %)";
        draw_sprite_ext(d_simbolo, 12, 375, 525, 0.5, 0.5, 0, c_white, 1);
        draw_text_transformed_colour(400, 525, aux, 0.8, 0.8, 0,
            c_black, c_black, c_black, c_black, 1);
        
        var ww = 0;
        var hh = 0;
        switch info_dato {
            case m_est_rol:
                for (var k = 0; k &lt; m_rol_total; k++) {
                    aux = s_porcent(info_rol[info_zona, k], tot) + " %";
                    draw_sprite_ext(d_icoedificio, k, 125 + ww, 675 + k * 50 - hh, 0.5, 0.5, 0, c_white, 1);
                    draw_text_transformed_colour(150 + ww, 675 + k * 50 - hh, aux, 0.8, 0.8, 0,
                        c_black, c_black, c_black, c_black, 1);
                    if k == 9 or k == 19 {
                        ww += 175;
                        hh += 10 * 50;
                    }
                }
                break;
            case m_est_zonas:
                for (var i = 0; i &lt; m_map_total + m_mmap_total; i++) {
                    aux = s_porcent(info_general[i, m_info_poblacion], tot) + " %";
                    aux = s_msj(900 + i) + ": " + aux;
                    draw_text_transformed_colour(125 + ww, 675 + i * 50 - hh, aux, 0.8, 0.8, 0,
                        c_black, c_black, c_black, c_black, 1);
                    if i == 9 or i == 19 {
                        ww += 175;
                        hh += 10 * 50;
                    }
                }
                break;
            case m_est_emocion:
                for (var k = 0; k &lt; 7; k++) {
                    aux = s_porcent(info_emocion[info_zona, k], tot) + " %";
                    draw_sprite_ext(d_icoemo, k, 125 + ww, 675 + k * 50 - hh, 0.5, 0.5, 0, c_white, 1);
                    draw_text_transformed_colour(150 + ww, 675 + k * 50 - hh, aux, 0.8, 0.8, 0,
                        c_black, c_black, c_black, c_black, 1);
                }
                break;
            case m_est_zodiaco:
                for (var k = 0; k &lt; 12; k++) {
                    aux = s_porcent(info_zodiaco[info_zona, k], tot) + " %";
                    draw_sprite_ext(d_zodiaco, k, 125 + ww, 675 + k * 50 - hh, 0.5, 0.5, 0, c_white, 1);
                    draw_text_transformed_colour(150 + ww, 675 + k * 50 - hh, aux, 0.8, 0.8, 0,
                        c_black, c_black, c_black, c_black, 1);
                    if k == 5 {
                        ww += 175;
                        hh += 6 * 50;
                    }
                }
                break;
        }
        break;
    case m_bot_guerra:
        draw_set_valign(fa_middle);
        draw_set_halign(fa_center);
        if info_zonaw == 22 {
            var cut = s_split(s_msj(200 + 16), " ", false);
            draw_text_colour(350, 275, cut[0],
                c_black, c_black, c_black, c_black, 1);
        }
        else {
            draw_text_colour(350, 275, s_msj(200 + info_zonaw),
                c_black, c_black, c_black, c_black, 1);
        }
        
        var ew = 500 / sprite_get_width(d_minimapa);
        var eh = 250 / sprite_get_height(d_minimapa);
        draw_sprite_ext(d_minimapa, 0, 100, 300, ew, eh, 0, c_aqua, 1);
        for (var i = 0; i &lt; m_map_total; i++) {
            if i == info_zonaw or
                    (info_zonaw == 17 and (i &gt;= 0 and i &lt;= 2)) or
                    (info_zonaw == 18 and (i &gt;= 3 and i &lt;= 5)) or
                    (info_zonaw == 19 and (i &gt;= 6 and i &lt;= 9)) or
                    (info_zonaw == 20 and (i &gt;= 10 and i &lt;= 12)) or
                    (info_zonaw == 21 and (i &gt;= 13 and i &lt;= 15)) or
                    (info_zonaw == 22 and (i == 16)) {
                draw_sprite_ext(d_minimapa, i + 1, 100, 300, ew, eh, 0, c_red, 1);
            }
            else {
                draw_sprite_ext(d_minimapa, i + 1, 100, 300, ew, eh, 0, c_lime, 1);
            }
        }
        
        draw_set_valign(fa_middle);
        draw_set_halign(fa_left);
        draw_text_colour(100, 625, s_msj(176), c_black, c_black, c_black, c_black, 1);
        draw_set_halign(fa_center);
        draw_text_colour(350, 625, s_msj(177), c_black, c_black, c_black, c_black, 1);
        draw_set_halign(fa_right);
        draw_text_colour(600, 625, s_msj(178), c_black, c_black, c_black, c_black, 1);
        
        draw_set_halign(fa_left);
        draw_sprite_ext(d_simbolo, 13, 125, 175, 0.5, 0.5, 0, c_white, 1);
        draw_text_colour(150, 175, s_msj(179) + " " + s_millaresmas(info_result[info_zonaw, m_res_semanal]),
            c_black, c_black, c_black, c_black, 1);
        draw_sprite_ext(d_simbolo, 13, 425, 175, 0.5, 0.5, 0, c_white, 1);
        draw_text_colour(450, 175, s_msj(180) + " " + s_millaresmas(info_result[info_zonaw, m_res_acumulado]),
            c_black, c_black, c_black, c_black, 1);
        
        var aux;
        for (var s = 0; s &lt; 8; s++) {
            draw_sprite_ext(d_estadistica, s, 125, 675 + s * 50, 0.5, 0.5, 0, c_white, 1);
            aux = string(info_trofeo[info_zonaw, s]) + ": " + string(info_result[info_zonaw, s]);
            draw_text_transformed_colour(150, 675 + s * 50, aux, 0.8, 0.8, 0,
                c_black, c_black, c_black, c_black, 1);
        }
        
        for (var s = 0; s &lt; 8; s++) {
            draw_sprite_ext(d_estadistica, s, 125 + 175, 675 + s * 50, 0.5, 0.5, 0, c_white, 1);
            aux = string(info_trofeo[info_zonaw, m_res_ofipuntaje + s]) + ": " +
                string(info_result[info_zonaw, m_res_ofipuntaje + s]);
            draw_text_transformed_colour(150 + 175, 675 + s * 50, aux, 0.8, 0.8, 0,
                c_black, c_black, c_black, c_black, 1);
        }
        
        var ss = 0;
        for (var s = 0; s &lt; 8; s++) {
            if s != 3 and s != 4 and s != 7 {
                draw_sprite_ext(d_estadistica, s, 125 + 350, 675 + ss * 50, 0.5, 0.5, 0, c_white, 1);
                aux = string(info_trofeo[info_zonaw, m_res_maxpuntaje + ss]) + ": " +
                    string(info_result[info_zonaw, m_res_maxpuntaje + ss]);
                draw_text_transformed_colour(150 + 350, 675 + ss * 50, aux, 0.8, 0.8, 0,
                    c_black, c_black, c_black, c_black, 1);
                ss++;
            }
        }
        
        break;
    case m_bot_ayuda:
        draw_set_valign(fa_middle);
        draw_set_halign(fa_center);
        draw_text_colour(350, 175, s_msj(500 + libro),
            c_black, c_black, c_black, c_black, 1);
        draw_text_colour(350, 225, string(libro + 1) + " / " + string(m_libro_total),
            c_black, c_black, c_black, c_black, 1);
        if libro &gt;= 6 and libro &lt; m_rol_total + 6 {
            // dibujar el arte
            var e = 0.5769;
            var roll = libro - 6;
            draw_sprite_ext(d_edificio, roll, 350 - 150 * e, 250, e, e, 0, c_white, 1);
            // unidad
            var xx = 475;
            var yy = 250;
            if roll == 21 {
                draw_sprite(d_objeto_d, roll, 50 + xx, 250 + yy);
            }
            draw_sprite(d_monigote, usuario_genero * 3, 50 + xx, 250 + yy);
            draw_sprite(d_monigote, usuario_genero * 3 + 1, 50 + xx, 250 + yy);
            draw_sprite(d_monigote, usuario_genero * 3 + 2, 50 + xx, 250 + yy);
            draw_sprite(d_cabeza, 0, 50 + xx, 250 + yy - 187);
            if roll != 21 {
                draw_sprite(d_objeto_d, roll, 50 + xx, 250 + yy);
            }
            draw_sprite(d_objeto_i, roll, 50 + xx, 250 + yy);
            var xxx = 64;
            var yyy = 48;
            switch roll {
                case 0:
                    draw_sprite(d_monigote, 8, 50 + xx + xxx, 250 + yy + yyy);
                    draw_sprite(d_monigote, 9, 50 + xx + xxx, 250 + yy + yyy);
                    draw_sprite(d_monigote, 10, 50 + xx + xxx, 250 + yy + yyy);
                    break;
                case 11:
                    draw_sprite_ext(d_monigote, 13, 50 + xx + xxx, 250 + yy + yyy,
                        1, 1, 0, c_white, 0.5);
                    break;
                case 20:
                    draw_sprite(d_monigote, 11, 50 + xx + xxx, 250 + yy + yyy);
                    break;
                case 24:
                    draw_sprite(d_monigote, 12, 50 + xx + xxx, 250 + yy + yyy);
                    break;
            }
            // monigotes
            for (var m = 0; m &lt; array_height_2d(monis); m++) {
                s_mini_monigote(monis[m, 0], monis[m, 1], roll);
            }
        }
        else if libro == 0 {
            var e = 0.5769;
            draw_sprite_ext(d_centro, 0, 350, 250, e, e, 0, c_white, 1);
            draw_sprite_ext(d_centro, 2 + bandera, 350, 250, e, e, 0, c_white, 1);
            draw_set_valign(fa_middle);
            draw_set_halign(fa_center);
            draw_text_colour(366, 378, s_millaresmas(
                info_general[m_map_total + m_mmap_total - 1, m_info_poblacion]),
                c_black, c_black, c_black, c_black, 1);
        }
        else {
            if libro &gt;= 6 {
                draw_sprite(d_libro, libro - m_rol_total, 100, 250);
            }
            else {
                draw_sprite(d_libro, libro, 100, 250);
            }
        }
        draw_set_valign(fa_top);
        draw_set_halign(fa_left);
        if libro == 0 {
            var v = s_split(m_clave_web, "v", false);
            draw_text_ext_colour(350 - 287, 600 - 16, string_replace(s_msj(700 + libro), "$", v[1]),
                -1, 575, c_black, c_black, c_black, c_black, 1);
        }
        else if libro = 45 {
            var ns = s_split(nota_servidor, "°", false);
            var def = "";
            var idi;
            var ok = false;
            for (var j = 0; j &lt; array_length_1d(ns); j++) {
                idi = s_split(ns[j], ":", false);
                if idi[0] == "en" {
                    if string_length(ns[j]) &gt; 3 {
                        def = string_copy(ns[j], 4, string_length(ns[j]) - 3);
                    }
                }
                if idi[0] == idioma {
                    if string_length(ns[j]) &gt; 3 {
                        def = string_copy(ns[j], 4, string_length(ns[j]) - 3);
                    }
                    else {
                        def = "";
                    }
                    draw_text_ext_colour(350 - 287, 600 - 16, s_msj(700 + libro) + def,
                        -1, 575, c_black, c_black, c_black, c_black, 1);
                    ok = true;
                    break;
                }
            }
            if !ok {
                draw_text_ext_colour(350 - 287, 600 - 16, s_msj(700 + libro) + def,
                    -1, 575, c_black, c_black, c_black, c_black, 1);
            }
        }
        else {
            draw_text_ext_colour(350 - 287, 600 - 16, s_msj(700 + libro),
                -1, 575, c_black, c_black, c_black, c_black, 1);
        }
        break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
